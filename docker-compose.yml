version: '3.9'

services:
  api:
    container_name: api
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '${API_PORT}:${API_PORT}'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:${API_PORT}/api || exit 1 "
        ]
      interval: 5s
      timeout: 60s
      retries: 3
      start_period: 5s
    depends_on:
      - postgres-compose
      - migrate
    networks:
      - my-network

  postgres-compose:
    image: postgres
    container_name: db
    environment:
      POSTGRES_PASSWORD: "password123"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "mydb"
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d mydb -U postgres" ]
      interval: 10s
      timeout: 60s
      retries: 3
      start_period: 5s
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    networks:
      - my-network

  migrate:
    image: node:16
    container_name: migrate
    command: npx prisma migrate deploy
    environment:
      DATABASE_URL: "postgresql://postgres:password123@db:5432/mydb?schema=public&connect_timeout=60"
    volumes:
      - ./prisma:/prisma
    networks:
      - my-network

networks:
  my-network:
    driver: bridge

volumes:
  postgres_volume:


